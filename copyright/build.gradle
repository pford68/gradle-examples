group 'com.macedon.gradle'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }

    test {
        java {
            srcDir 'test/java'
        }
        resources {
            srcDir 'test/resources'
        }
    }
}


task fileNames << {
    FileTree files = fileTree(projectDir){
        include '**/*.java'
    }
    files.each {File f ->
        println f.name
    }
}



task cleanup << {
    FileTree files = fileTree(projectDir){
        include '**/*.java.bk'
    }
    files.each {File f ->
        f.delete()
    }
}

task revert << {
    FileTree files = fileTree(projectDir){
        include '**/*.java'
    }
    String template = file('src/resources/copyright.tpl').getText()
    String path
    File tmp
    files.each {File f ->
        path = f.getAbsolutePath()
        println path
        if (f.getText().startsWith(template)) {
            tmp = file(new File(path + ".tmp"))
            tmp.createNewFile()
            tmp << f.getText().replace(template, "")
            tmp.renameTo(path)
            if (f.getText().startsWith(template)){
                throw new Error("The text was not reverted")
            }
        }
    }
}


task copyright << {
    FileTree files = fileTree(projectDir){
        include '**/*.java'
    }

    String template = file('src/resources/copyright.tpl').getText()
    println template
    String path
    File tmp, bk

    files.each {File f ->
        path = f.getAbsolutePath()
        println path
        if (!f.getText().startsWith(template.trim())) {
            bk = file(new File(path + ".bk"))
            bk.createNewFile()
            bk << f.getText()
            tmp = file(new File(path + ".tmp"))
            tmp.createNewFile()
            tmp << template + f.getText()
            if (tmp.getText().startsWith(template)){
                tmp.renameTo(path)
                if (!f.getText().startsWith(template)){
                    throw new Error("The text was not copied")
                }
            } else {
                throw new Error("The text was not copied")
            }
        }
    }
}
